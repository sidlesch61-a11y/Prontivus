version: "3.9"
services:
  backend:
    image: ghcr.io/your-org/prontivus-backend:latest
    env_file: .env
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:${POSTGRES_PASSWORD}@db:5432/clinicore
      ENVIRONMENT: production
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks: [app-net]

  frontend:
    image: ghcr.io/your-org/prontivus-frontend:latest
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    depends_on:
      - backend
    networks: [app-net]

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: clinicore
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks: [app-net]

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    networks: [app-net]

  nginx:
    image: nginx:1.27-alpine
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/certs:/etc/nginx/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks: [app-net]

  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./deploy/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks: [app-net]

  grafana:
    image: grafana/grafana:11.2.0
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
    ports:
      - "3001:3000"
    networks: [app-net]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks: [app-net]

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks: [app-net]

networks:
  app-net:
    driver: bridge

volumes:
  db_data:


