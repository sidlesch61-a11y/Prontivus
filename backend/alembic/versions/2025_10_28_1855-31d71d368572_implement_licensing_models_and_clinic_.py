"""implement licensing models and clinic linkage

Revision ID: 31d71d368572
Revises: d00a7fe9fd05
Create Date: 2025-10-28 18:55:36.439643

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31d71d368572'
down_revision: Union[str, None] = 'd00a7fe9fd05'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('licenses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('plan', sa.String(length=50), nullable=False),
    sa.Column('modules', sa.JSON(), nullable=False),
    sa.Column('users_limit', sa.Integer(), nullable=False),
    sa.Column('units_limit', sa.Integer(), nullable=True),
    sa.Column('start_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'EXPIRED', 'CANCELLED', name='licensestatus'), nullable=False),
    sa.Column('activation_key', sa.UUID(), nullable=False),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_licenses_activation_key'), 'licenses', ['activation_key'], unique=True)
    op.create_index(op.f('ix_licenses_id'), 'licenses', ['id'], unique=False)
    op.create_index(op.f('ix_licenses_tenant_id'), 'licenses', ['tenant_id'], unique=False)
    op.create_table('activations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('license_id', sa.UUID(), nullable=False),
    sa.Column('instance_id', sa.String(length=255), nullable=False),
    sa.Column('device_info', sa.JSON(), nullable=True),
    sa.Column('activated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_check_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'MIGRATED', 'REVOKED', name='activationstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['licenses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_id', 'instance_id', name='uq_license_instance')
    )
    op.create_index(op.f('ix_activations_id'), 'activations', ['id'], unique=False)
    op.create_index(op.f('ix_activations_instance_id'), 'activations', ['instance_id'], unique=True)
    op.create_index(op.f('ix_activations_license_id'), 'activations', ['license_id'], unique=False)
    op.create_table('entitlements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('license_id', sa.UUID(), nullable=False),
    sa.Column('module', sa.String(length=50), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('limits_json', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['license_id'], ['licenses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('license_id', 'module', name='uq_license_module')
    )
    op.create_index(op.f('ix_entitlements_id'), 'entitlements', ['id'], unique=False)
    op.create_index(op.f('ix_entitlements_license_id'), 'entitlements', ['license_id'], unique=False)
    op.create_index(op.f('ix_entitlements_module'), 'entitlements', ['module'], unique=False)
    op.add_column('clinics', sa.Column('commercial_name', sa.String(length=200), nullable=True))
    op.add_column('clinics', sa.Column('license_id', sa.UUID(), nullable=True))
    op.create_index(op.f('ix_clinics_license_id'), 'clinics', ['license_id'], unique=True)
    op.create_foreign_key(None, 'clinics', 'licenses', ['license_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'clinics', type_='foreignkey')
    op.drop_index(op.f('ix_clinics_license_id'), table_name='clinics')
    op.drop_column('clinics', 'license_id')
    op.drop_column('clinics', 'commercial_name')
    op.drop_index(op.f('ix_entitlements_module'), table_name='entitlements')
    op.drop_index(op.f('ix_entitlements_license_id'), table_name='entitlements')
    op.drop_index(op.f('ix_entitlements_id'), table_name='entitlements')
    op.drop_table('entitlements')
    op.drop_index(op.f('ix_activations_license_id'), table_name='activations')
    op.drop_index(op.f('ix_activations_instance_id'), table_name='activations')
    op.drop_index(op.f('ix_activations_id'), table_name='activations')
    op.drop_table('activations')
    op.drop_index(op.f('ix_licenses_tenant_id'), table_name='licenses')
    op.drop_index(op.f('ix_licenses_id'), table_name='licenses')
    op.drop_index(op.f('ix_licenses_activation_key'), table_name='licenses')
    op.drop_table('licenses')
    # ### end Alembic commands ###
