"""Add stock management tables

Revision ID: 2302595cc0fb
Revises: 8618dd7ae961
Create Date: 2025-10-27 03:13:43.551983

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2302595cc0fb'
down_revision: Union[str, None] = '8618dd7ae961'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('MEDICATION', 'MEDICAL_SUPPLY', 'EQUIPMENT', 'CONSUMABLE', 'INSTRUMENT', 'OTHER', name='productcategory'), nullable=False),
    sa.Column('supplier', sa.String(length=200), nullable=True),
    sa.Column('min_stock', sa.Integer(), nullable=False),
    sa.Column('current_stock', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('unit_of_measure', sa.String(length=50), nullable=True),
    sa.Column('barcode', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_products_barcode'), 'products', ['barcode'], unique=True)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_table('stock_alerts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_alerts_id'), 'stock_alerts', ['id'], unique=False)
    op.create_table('stock_movements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('IN', 'OUT', 'ADJUSTMENT', 'TRANSFER', 'EXPIRED', 'DAMAGED', name='stockmovementtype'), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Enum('PURCHASE', 'SALE', 'USAGE', 'RETURN', 'ADJUSTMENT', 'TRANSFER', 'EXPIRED', 'DAMAGED', 'THEFT', 'DONATION', 'OTHER', name='stockmovementreason'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('related_type', sa.String(length=50), nullable=True),
    sa.Column('unit_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('total_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinics.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_movements_id'), 'stock_movements', ['id'], unique=False)
    op.drop_index('ix_invoice_lines_invoice_id', table_name='invoice_lines')
    op.drop_index('ix_invoice_lines_service_item_id', table_name='invoice_lines')
    op.drop_index('ix_invoices_appointment_id', table_name='invoices')
    op.drop_index('ix_invoices_clinic_id', table_name='invoices')
    op.drop_index('ix_invoices_patient_id', table_name='invoices')
    op.drop_index('ix_invoices_status', table_name='invoices')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_invoices_status', 'invoices', ['status'], unique=False)
    op.create_index('ix_invoices_patient_id', 'invoices', ['patient_id'], unique=False)
    op.create_index('ix_invoices_clinic_id', 'invoices', ['clinic_id'], unique=False)
    op.create_index('ix_invoices_appointment_id', 'invoices', ['appointment_id'], unique=False)
    op.create_index('ix_invoice_lines_service_item_id', 'invoice_lines', ['service_item_id'], unique=False)
    op.create_index('ix_invoice_lines_invoice_id', 'invoice_lines', ['invoice_id'], unique=False)
    op.drop_index(op.f('ix_stock_movements_id'), table_name='stock_movements')
    op.drop_table('stock_movements')
    op.drop_index(op.f('ix_stock_alerts_id'), table_name='stock_alerts')
    op.drop_table('stock_alerts')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_barcode'), table_name='products')
    op.drop_table('products')
    # ### end Alembic commands ###
